# SSH Tunnel Client Configuration
# Network Administrator Tool - Auto-Tunneling Client Configuration
#
# This configuration file defines how the SSH tunnel client connects to parent servers
# and establishes reverse tunnels for remote network administration.

@{
    # Unique identifier for this client instance
    # Generated automatically during installation
    ClientId = "00000000-0000-0000-0000-000000000000"
    
    # Parent servers to connect to (in priority order)
    # The client will attempt to connect to servers in order of priority
    ParentServers = @(
        @{
            Host = "tunnel.company.com"      # Primary parent server
            Port = 22                        # SSH port on parent server
            Priority = 1                     # Connection priority (lower = higher priority)
        }
        @{
            Host = "backup.company.com"      # Backup parent server
            Port = 443                       # Alternative port (firewall-friendly)
            Priority = 2                     # Fallback server
        }
        @{
            Host = "10.0.1.100"             # Internal parent server
            Port = 22                        # Standard SSH port
            Priority = 3                     # Internal fallback
        }
    )
    
    # SSH authentication settings
    Username = "tunnel-client"               # Username for SSH authentication
    PrivateKeyPath = "$env:USERPROFILE\.ssh\id_rsa"  # Path to SSH private key
    
    # Local ports to tunnel (service name -> local port mapping)
    # These ports will be forwarded through reverse SSH tunnels
    TunnelPorts = @{
        SSH = 22                            # SSH access to this machine
        RDP = 3389                          # Remote Desktop Protocol
        HTTP = 80                           # Web server (if running)
        HTTPS = 443                         # Secure web server (if running)
        WinRM = 5985                        # Windows Remote Management
        WinRMSecure = 5986                  # Secure Windows Remote Management
    }
    
    # Tunnel behavior settings
    AutoRestart = $true                     # Automatically restart failed tunnels
    ReconnectInterval = 30                  # Seconds between reconnection attempts
    HealthCheckInterval = 60                # Seconds between tunnel health checks
    MaxReconnectAttempts = 10               # Maximum reconnection attempts before giving up
    
    # Network discovery settings
    EnableNetworkScan = $false              # Enable local network scanning for parent servers
    NetworkScanRange = 50                   # Maximum hosts to scan during network discovery
    
    # DNS-based discovery settings
    EnableDNSDiscovery = $true              # Enable DNS SRV record discovery
    DNSDomain = $env:USERDNSDOMAIN          # Domain for DNS SRV lookups (_ssh-tunnel._tcp.domain)
    
    # Proxy settings (if required for outbound connections)
    ProxySettings = @{
        Enabled = $false                    # Enable proxy support
        Type = "HTTP"                       # Proxy type (HTTP, SOCKS5)
        Host = "proxy.company.com"          # Proxy server hostname
        Port = 8080                         # Proxy server port
        Username = ""                       # Proxy authentication username (if required)
        Password = ""                       # Proxy authentication password (if required)
    }
    
    # Security settings
    SecuritySettings = @{
        StrictHostKeyChecking = $false      # Disable strict host key checking for auto-config
        KnownHostsFile = "/dev/null"        # Disable known hosts file
        ServerAliveInterval = 30            # Send keepalive packets every 30 seconds
        ServerAliveCountMax = 3             # Disconnect after 3 failed keepalives
        ExitOnForwardFailure = $true        # Exit if port forwarding fails
    }
    
    # Logging configuration
    LogLevel = "Info"                       # Log level (Debug, Info, Warning, Error)
    LogRetentionDays = 30                   # Days to retain log files
    MaxLogSizeMB = 10                       # Maximum log file size before rotation
    
    # Service behavior
    ServiceSettings = @{
        StartupDelay = 10                   # Seconds to wait before starting tunnels
        ShutdownTimeout = 30                # Seconds to wait for graceful shutdown
        RestartDelay = 5                    # Seconds to wait before restarting failed tunnels
    }
    
    # Advanced settings
    AdvancedSettings = @{
        # SSH connection options
        SSHOptions = @{
            "Compression" = "yes"           # Enable SSH compression
            "TCPKeepAlive" = "yes"          # Enable TCP keepalive
            "ConnectTimeout" = "30"         # Connection timeout in seconds
            "BatchMode" = "yes"             # Disable interactive prompts
        }
        
        # Port allocation strategy for remote ports
        # "Sequential" - Use ports 10000+localport
        # "Random" - Use random high ports
        # "Configured" - Use manually configured port mappings
        PortAllocationStrategy = "Sequential"
        
        # Manual port mappings (used with "Configured" strategy)
        PortMappings = @{
            22 = 10022                      # SSH: local port 22 -> remote port 10022
            3389 = 13389                    # RDP: local port 3389 -> remote port 13389
            80 = 10080                      # HTTP: local port 80 -> remote port 10080
            443 = 10443                     # HTTPS: local port 443 -> remote port 10443
        }
        
        # Network interface binding
        BindInterface = "0.0.0.0"           # Local interface to bind tunnels to
        
        # Tunnel compression
        EnableCompression = $true           # Enable tunnel compression for better performance
        
        # Connection multiplexing
        EnableMultiplexing = $false         # Enable SSH connection multiplexing
        MultiplexPath = "$env:TEMP\ssh_mux_%h_%p_%r"  # Multiplex socket path
    }
    
    # Monitoring and alerting
    MonitoringSettings = @{
        EnableHealthChecks = $true          # Enable tunnel health monitoring
        HealthCheckInterval = 60            # Health check interval in seconds
        AlertOnFailure = $false             # Send alerts when tunnels fail
        AlertEmail = "admin@company.com"    # Email address for alerts
        AlertThreshold = 3                  # Number of failures before alerting
    }
    
    # Client identification and metadata
    ClientInfo = @{
        Description = "Auto-configured SSH tunnel client"
        Location = "Auto-detected"          # Physical location of this client
        Department = "IT"                   # Department or team responsible
        Contact = "admin@company.com"       # Contact information
        Tags = @("production", "managed")   # Tags for organization
    }
}

